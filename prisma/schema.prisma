// prisma/schema.prisma

generator client {
  provider      = "prisma-client-js"
  output        = "../node_modules/.prisma/client"
  binaryTargets = ["native", "windows", "darwin", "darwin-arm64", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./prisma/dev.db"
}

// -- MENU MODELS --

model Category {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  products  Product[]
}

model Product {
  id              Int      @id @default(autoincrement())
  name            String
  sku             String   @unique
  price           Float
  description     String?
  isArchived      Boolean  @default(false)
  
  categoryId      Int
  category        Category @relation(fields: [categoryId], references: [id])
  
  modifierGroups  ModifierGroup[] @relation("ProductModifierGroups")
  orderItems      OrderItem[]
}

model ModifierGroup {
  id            Int      @id @default(autoincrement())
  name          String
  minSelection  Int      @default(0)
  maxSelection  Int      @default(1)
  options       ModifierOption[]
  products      Product[] @relation("ProductModifierGroups")
}

model ModifierOption {
  id              Int      @id @default(autoincrement())
  name            String
  priceAdjustment Float    @default(0)
  
  modifierGroupId Int
  modifierGroup   ModifierGroup @relation(fields: [modifierGroupId], references: [id])
  orderItems      OrderItem[] @relation("OrderItemModifiers")
}


// -- OPERATIONS MODELS --

// REMOVED the TableStatus enum as it's not supported by SQLite

model Table {
  id      Int         @id @default(autoincrement())
  name    String      @unique
  // CHANGED: The status is now a String, with a default value.
  // We'll manage the allowed values ("AVAILABLE", "OCCUPIED", etc.) in our application code.
  status  String      @default("AVAILABLE")
  orders  Order[]
}

// REMOVED the OrderStatus enum as it's not supported by SQLite

model Order {
  id          Int         @id @default(autoincrement())
  // CHANGED: The status is now a String, with a default value.
  // We'll manage the allowed values ("OPEN", "PAID", "CANCELED") in our application code.
  status      String      @default("OPEN")
  totalAmount Float       @default(0)
  createdAt   DateTime    @default(now())
  
  tableId     Int?
  table       Table?      @relation(fields: [tableId], references: [id])
  
  items       OrderItem[]
}

model OrderItem {
  id                 Int      @id @default(autoincrement())
  quantity           Int
  priceAtTimeOfOrder Float
  
  orderId            Int
  order              Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  
  productId          Int
  product            Product  @relation(fields: [productId], references: [id])
  
  selectedModifiers  ModifierOption[] @relation("OrderItemModifiers")
}